//Nombre: Sergio Ortiz
//Fecha: 23/08/2013
//Descripcion: Menu con diferentes funciones que funcionan con vectores.

#include <iostream>
#include <conio.h>
using namespace std;

void cargarVec(int vec[],int n)
{int i;
 for(i=0;i<n;i++)
  {cout<<"vec["<<i<<"]: ";
   cin>>vec[i];
  }
}

void mostrarVec(int vec[],int n)
{int i;
 for(i=0;i<n;i++)
  {cout<<"\nvec["<<i<<"]: "<<vec[i];
  }
}

void eliminarParesVec(int vec[],int &n)
{int i,j;
 for(i=0;i<n;i++)
  {if(vec[i]%2==0)
   {for(j=i;j<n;j++)
     {vec[j]=vec[j+1];
     }
    n--;
	i--;
   }
  }
}

void generarImpVec(int vec[],int n,int vecA[])
{int i,k,m=0,j=0;
 for(i=0;i<n;i++)
  {if(vec[i]%2==1)
    {vecA[j]=vec[i];
     j++;
	 m++;
    }
  }
 for(k=0;k<m;k++)
	 cout<<"\nimpar["<<k<<"]: "<<vecA[k];
}

void cargarVecDif(int vec[],int n)
{int i;
 for(i=0;i<n/2;i++)
   {cout<<"vec["<<i<<"]: ";
    cin>>vec[i];
    cout<<"vec["<<n-1-i<<"]: ";
    cin>>vec[n-1-i];
   }
 if(n%2==1)
  {cout<<"vec["<<n/2<<"]: ";
   cin>>vec[n/2];
  }
}

void main()
{int vector[30],nelementos,opcion,vecA[30],vecB[30];
cout<<"Determine el tamaÃ±o del vector: ";
cin>>nelementos;
do
  {cout<<"\n\n  ***** MENU DE VECTORES ******";
   cout<<"\n1.-Cargar vector";
   cout<<"\n2.-Mostrar vector";
   cout<<"\n3.-Generar vector con elementos impares";
   cout<<"\n4.-Eliminar elementos pares.";
   cout<<"\n5.-Cargar vector diferente.";
   cout<<"\n0.-SALIR";
   cout<<"\n\nopcion: ";
   cin>>opcion;
   switch(opcion)
    {case 1:cargarVec(vector,nelementos);break;
     case 2:mostrarVec(vector,nelementos);break;
	 case 3:cargarVec(vector,nelementos);generarImpVec(vector,nelementos,vecA);break;
	 case 4:eliminarParesVec(vector,nelementos);break;
	 case 5:cargarVecDif(vector,nelementos);break;
	 case 0:break;
	 default:cout<<"\nEscoja una opcion valida!!!";
    }
  }
while(opcion!=0);
   _getch();
}

/*TAREA: 1.-Realizar una funcion que dado un vector retorne el elemento mayor de los elementos primos.
         2.-Realizar un segundo vector con los elementos que pertenezcan a la serie de fibonacci*/


